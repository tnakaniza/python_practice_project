{"name": "test_transaction_validation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6BB5AB095+29557]\n\t(No symbol) [0x00007FF6BB51FA50]\n\t(No symbol) [0x00007FF6BB3DB56A]\n\t(No symbol) [0x00007FF6BB42F695]\n\t(No symbol) [0x00007FF6BB42F8EC]\n\t(No symbol) [0x00007FF6BB47B777]\n\t(No symbol) [0x00007FF6BB4571CF]\n\t(No symbol) [0x00007FF6BB47851C]\n\t(No symbol) [0x00007FF6BB456F33]\n\t(No symbol) [0x00007FF6BB42116F]\n\t(No symbol) [0x00007FF6BB4222D1]\n\tGetHandleVerifier [0x00007FF6BB8DC96D+3378253]\n\tGetHandleVerifier [0x00007FF6BB928497+3688311]\n\tGetHandleVerifier [0x00007FF6BB91D1CB+3642539]\n\tGetHandleVerifier [0x00007FF6BB66A6B6+813462]\n\t(No symbol) [0x00007FF6BB52AB5F]\n\t(No symbol) [0x00007FF6BB526B74]\n\t(No symbol) [0x00007FF6BB526D10]\n\t(No symbol) [0x00007FF6BB515C1F]\n\tBaseThreadInitThunk [0x00007FF8666C7374+20]\n\tRtlUserThreadStart [0x00007FF867AFCC91+33]", "trace": "self = <Tests.test_banking.TestBanking object at 0x000002B2E9A3F1D0>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9569e30c76e6eea9fb7d6c55bc421d57\")>\n\n    @pytest.mark.nakani\n    @allure.severity(allure.severity_level.CRITICAL)\n    \n    def test_transaction_validation(self, setup):\n        \"\"\"Test 3: Deposit, Transaction, Withdraw, and Validate Balance\"\"\"\n        self.driver = setup\n        self.driver.get(self.way2AutomationURL)\n        self.driver.maximize_window()\n        try:\n    \n            login = LoginPage(self.driver)\n            login.login_as_customer()\n    \n            customer = CustomerPage(self.driver)\n            customer.select_random_customer()\n            account = AccountPage(self.driver)\n    \n            account.deposit_amount(31459)\n            WebDriverWait(self.driver, 20).until(\n                lambda d: account.get_balance() == '31459'\n            )\n            assert account.get_balance() == '31459', \"Initial deposit failed\"\n    \n            account.open_transactions()\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Transactions Page\",\n                          attachment_type=AttachmentType.PNG)\n    \n            account.withdraw_amount(31459)\n            WebDriverWait(self.driver, 20).until(\n                lambda d: account.get_balance() == '0'\n            )\n            assert account.get_balance() == '0', \"Balance not restored to original\"\n            account.open_transactions()\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Final Transaction\",\n                          attachment_type=AttachmentType.PNG)\n    \n            time.sleep(2)\n        except TimeoutException as e:\n            print(f\"TimeoutException encountered: {e}\")\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"TimeoutException\", attachment_type=AttachmentType.PNG)\n>           raise e  # re-raise exception for reporting\n\nTests\\test_banking.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nTests\\test_banking.py:125: in test_transaction_validation\n    WebDriverWait(self.driver, 20).until(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\nTests\\test_banking.py:126: in <lambda>\n    lambda d: account.get_balance() == '31459'\nPages\\account_page.py:50: in get_balance\n    balance_element = wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, self.balance_CSS_SELECTOR)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9569e30c76e6eea9fb7d6c55bc421d57\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002B2E9AC8EA0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6BB5AB095+29557]\nE       \t(No symbol) [0x00007FF6BB51FA50]\nE       \t(No symbol) [0x00007FF6BB3DB56A]\nE       \t(No symbol) [0x00007FF6BB42F695]\nE       \t(No symbol) [0x00007FF6BB42F8EC]\nE       \t(No symbol) [0x00007FF6BB47B777]\nE       \t(No symbol) [0x00007FF6BB4571CF]\nE       \t(No symbol) [0x00007FF6BB47851C]\nE       \t(No symbol) [0x00007FF6BB456F33]\nE       \t(No symbol) [0x00007FF6BB42116F]\nE       \t(No symbol) [0x00007FF6BB4222D1]\nE       \tGetHandleVerifier [0x00007FF6BB8DC96D+3378253]\nE       \tGetHandleVerifier [0x00007FF6BB928497+3688311]\nE       \tGetHandleVerifier [0x00007FF6BB91D1CB+3642539]\nE       \tGetHandleVerifier [0x00007FF6BB66A6B6+813462]\nE       \t(No symbol) [0x00007FF6BB52AB5F]\nE       \t(No symbol) [0x00007FF6BB526B74]\nE       \t(No symbol) [0x00007FF6BB526D10]\nE       \t(No symbol) [0x00007FF6BB515C1F]\nE       \tBaseThreadInitThunk [0x00007FF8666C7374+20]\nE       \tRtlUserThreadStart [0x00007FF867AFCC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Test 3: Deposit, Transaction, Withdraw, and Validate Balance", "attachments": [{"name": "TimeoutException", "source": "97dfa6c4-89d6-4617-898a-ac0782a5ab9f-attachment.png", "type": "image/png"}], "start": 1730157715663, "stop": 1730157742628, "uuid": "2f439d43-5956-4919-9669-dd5860f0a446", "historyId": "ec6ba57d6daec6d95af04e059fb21983", "testCaseId": "ec6ba57d6daec6d95af04e059fb21983", "fullName": "Tests.test_banking.TestBanking#test_transaction_validation", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "nakani"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_banking"}, {"name": "subSuite", "value": "TestBanking"}, {"name": "host", "value": "DESKTOP-400OCEN"}, {"name": "thread", "value": "16360-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_banking"}]}